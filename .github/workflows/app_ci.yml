name: App CI/CD

on:
  push:
    branches: [ "develop" ]
  pull_request:

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    defaults:
      run:
        working-directory: src   

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('src/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dev tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black isort pytest pytest-django

      - name: Lint
        run: |
          flake8 .
          black --check .
          isort --check-only .
      
      - name: Run tests
        run: |
          python manage.py test

      - name: Compute image name
        id: metaname
        run: |
          echo "image_name=$(echo ghcr.io/${{ github.repository }}:sha-${{ github.sha }} | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: |
          docker build -t "${{ steps.metaname.outputs.image_name }}" -f Dockerfile .

      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.18.0
        with:
          scan-type: image
          image-ref: ${{ steps.metaname.outputs.image_name }}
          vuln-type: 'os,library'
          format: 'table'
          severity: 'CRITICAL'
          ignore-unfixed: true
          exit-code: '1'
